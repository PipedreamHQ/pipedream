# .github/workflows/pipedream-ci.yml
name: Pipedream CI/CD

on:
  pull_request:
    types:
      - opened
      - synchronize 
      - reopened
      - closed
    branches:
      - main
      - research

jobs:
  handle-components:
    runs-on: ubuntu-latest
    # Only run on merge events or PR validation (not closed without merge)
    if: github.event.action != 'closed' || github.event.pull_request.merged == true
    steps:
      - name: Checkout all history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Pipedream CLI
        run: |
          curl https://cli.pipedream.com/install | sh
          echo "$HOME/.pipedream/bin" >> $GITHUB_PATH

      - name: Configure Pipedream CLI Profile
        env:
          PIPEDREAM_API_KEY: ${{ secrets.PIPEDREAM_API_KEY }}
          PIPEDREAM_ORG_ID:  ${{ vars.PIPEDREAM_ORG_ID }}
        run: |
          mkdir -p ~/.config/pipedream
          printf "[workspace]\napi_key = %s\norg_id = %s\n" \
            "$PIPEDREAM_API_KEY" "$PIPEDREAM_ORG_ID" \
          > ~/.config/pipedream/config

      - name: Show Event Info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Merged: ${{ github.event.pull_request.merged }}"
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"
          echo "Head branch: ${{ github.event.pull_request.head.ref }}"

      - name: Diff & Process Components
        env:
          PROFILE: workspace
          # Only run actual publish/unpublish on merged PRs, dry-run for validation
          DRY_RUN: ${{ github.event.action != 'closed' || github.event.pull_request.merged != true }}
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          HEAD_REF: ${{ github.event.pull_request.head.sha }}
        run: |
          chmod +x scripts/anyreach-pd-change-handler.sh
          ./scripts/anyreach-pd-change-handler.sh \
            --base "${BASE_REF}" \
            --head "${HEAD_REF}" \
            $( [[ "$DRY_RUN" == 'true' ]] && echo "--dry-run" )
