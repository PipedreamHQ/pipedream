import ramp from "../../ramp.app.mjs";

export default {
  key: "ramp-create-new-limit",
  name: "Create New Limit",
  description: "Creates a new limit for a given user. [See the documentation](https://docs.ramp.com/developer-api/v1/overview/getting-started)",
  version: "0.0.{{ts}}",
  type: "action",
  props: {
    ramp,
    displayName: ramp.propDefinitions.displayName,
    linkToExistingSpendProgram: ramp.propDefinitions.linkToExistingSpendProgram,
    sendPhysicalCard: ramp.propDefinitions.sendPhysicalCard,
    userId: ramp.propDefinitions.userId,
    primaryCardEnabled: ramp.propDefinitions.primaryCardEnabled,
    reimbursementsEnabled: ramp.propDefinitions.reimbursementsEnabled,
    totalLimitPerInterval: ramp.propDefinitions.totalLimitPerInterval,
    interval: ramp.propDefinitions.interval,
    maximumSpendPerTransaction: ramp.propDefinitions.maximumSpendPerTransaction,
    allowedCategories: ramp.propDefinitions.allowedCategories,
    allowedVendors: ramp.propDefinitions.allowedVendors,
    blockedCategories: ramp.propDefinitions.blockedCategories,
    blockedMccCodes: ramp.propDefinitions.blockedMccCodes,
    blockedVendors: ramp.propDefinitions.blockedVendors,
    isShareable: ramp.propDefinitions.isShareable,
    firstName: ramp.propDefinitions.firstName,
    lastName: ramp.propDefinitions.lastName,
    address1: ramp.propDefinitions.address1,
    city: ramp.propDefinitions.city,
    state: ramp.propDefinitions.state,
    postalCode: ramp.propDefinitions.postalCode,
    country: ramp.propDefinitions.country,
    address2: ramp.propDefinitions.address2,
    phone: ramp.propDefinitions.phone,
    spendProgramId: ramp.propDefinitions.spendProgramId,
  },
  async run({ $ }) {
    const data = {
      display_name: this.displayName,
      link_to_existing_spend_program: this.linkToExistingSpendProgram,
      send_physical_card: this.sendPhysicalCard,
      user_id: this.userId,
      primary_card_enabled: this.primaryCardEnabled,
      reimbursements_enabled: this.reimbursementsEnabled,
      total_limit_per_interval: this.totalLimitPerInterval,
      interval: this.interval,
      maximum_spend_per_transaction: this.maximumSpendPerTransaction,
      allowed_categories: this.allowedCategories,
      allowed_vendors: this.allowedVendors,
      blocked_categories: this.blockedCategories,
      blocked_mcc_codes: this.blockedMccCodes,
      blocked_vendors: this.blockedVendors,
      is_shareable: this.isShareable,
      recipient_address: {
        first_name: this.firstName,
        last_name: this.lastName,
        address1: this.address1,
        city: this.city,
        state: this.state,
        postal_code: this.postalCode,
        country: this.country,
        address2: this.address2,
        phone: this.phone,
      },
    };

    const response = await this.ramp.createLimit($, data);
    $.export("$summary", `Successfully created new limit with ID ${response.id}`);
    return response;
  },
};
