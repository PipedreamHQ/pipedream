import app from "../../wix_api_key.app.mjs";

export default {
  key: "wix_api_key-create-draft-post",
  name: "Create Draft Post",
  description: "Creates a new draft post. [See the documentation](https://dev.wix.com/docs/rest/business-solutions/blog/draft-posts/create-draft-post).",
  version: "0.0.1",
  type: "action",
  props: {
    app,
    title: {
      type: "string",
      label: "Title",
      description: "Draft post title",
    },
    featured: {
      type: "boolean",
      label: "Featured",
      description: "Whether the draft post is marked as featured",
      optional: true,
    },
    categoryIds: {
      type: "string[]",
      label: "Category IDs",
      description: "Category IDs of the draft post",
      propDefinition: [
        app,
        "categoryId",
      ],
    },
    memberId: {
      description: "Draft post owner's member ID",
      propDefinition: [
        app,
        "memberId",
      ],
    },
    hashtags: {
      type: "string[]",
      label: "Hashtags",
      description: "Hashtags of the draft post",
      optional: true,
    },
    commentingEnabled: {
      type: "boolean",
      label: "Commenting Enabled",
      description: "Whether commenting is enabled on the draft post",
      optional: true,
    },
    tagIds: {
      type: "string[]",
      label: "Tag IDs",
      description: "Tag IDs the draft post is tagged with",
      propDefinition: [
        app,
        "tagId",
      ],
    },
    relatedPostIds: {
      type: "string[]",
      label: "Related Post IDs",
      description: "IDs of posts related to this draft post",
      propDefinition: [
        app,
        "postId",
      ],
    },
    language: {
      type: "string",
      label: "Language",
      description: "Language the draft post is written in. 2-or-4-letter language code in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format. Eg. `en`",
      optional: true,
    },
    publish: {
      type: "boolean",
      label: "Publish",
      description: "Whether to publish the post after creation",
      optional: true,
    },
    fieldsets: {
      type: "string[]",
      label: "Fieldsets",
      description: "List of additional draft post fields to include in the response. For example, use the `URL` fieldset to retrieve the url field in the response in addition to the draft post's base fields. Base fields don't include any of the supported fieldset values. By default only the draft post's base fields are returned.",
      optional: true,
      options: [
        {
          label: "If the user has not set excerpt, returns the one autogenerated from content.",
          value: "GENERATED_EXCERPT",
        },
        {
          label: "Includes rich content field.",
          value: "RICH_CONTENT",
        },
        {
          label: "Includes content field.",
          value: "CONTENT",
        },
        {
          label: "Includes internal id field. Reserved for internal use.",
          value: "INTERNAL_ID",
        },
        {
          label: "Includes draft post preview URL.",
          value: "URL",
        },
        {
          label: "Unknown field.",
          value: "UNKNOWN",
        },
      ],
    },
  },
  methods: {
    createDraftPost(args = {}) {
      return this.app._makeRequest({
        method: "POST",
        path: "/blog/v3/draft-posts",
        ...args,
      });
    },
  },
  async run({ $ }) {
    const {
      createDraftPost,
      title,
      featured,
      categoryIds,
      memberId,
      hashtags,
      commentingEnabled,
      tagIds,
      relatedPostIds,
      language,
      publish,
      fieldsets,
    } = this;

    const response = await createDraftPost({
      $,
      data: {
        draftPost: {
          title,
          featured,
          categoryIds,
          memberId,
          hashtags,
          commentingEnabled,
          tagIds,
          relatedPostIds,
          language,
        },
        publish,
        fieldsets,
      },
    });

    $.export("$summary", `Successfully created draft post with ID \`${response.draftPost.id}\`.`);
    return response;
  },
};
