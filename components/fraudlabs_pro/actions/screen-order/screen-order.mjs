import fraudlabsProApp from "../../fraudlabs_pro.app.mjs";

export default {
  name: "Screen Order",
  description: "Screen an order transaction for payment fraud. This action will detect all possibles fraud traits based on the input parameters supplied. The more input parameter supplied, the higher accuracy of fraud detection. Please refer to the [documentation](https://www.fraudlabspro.com/developer/api/screen-order) for the explanation of the result returned.",
  key: "fraudlabs_pro-screen-order",
  version: "0.0.1",
  type: "action",
  props: {
    fraudlabsProApp,
    ip: {
      type: "string",
      label: "IP Address",
      description: "IP address of online transaction. It supports both IPv4 and IPv6 address format.",
    },
    format: {
      propDefinition: [
        fraudlabsProApp,
        "format",
      ],
    },
    lastName: {
      type: "string",
      label: "Last Name",
      description: "*(optional)* User's last name.",
      optional: true,
    },
    firstName: {
      type: "string",
      label: "First Name",
      description: "*(optional)* User's first name.",
      optional: true,
    },
    billAddr: {
      type: "string",
      label: "Billing Address",
      description: "*(optional)* Street address of billing address.",
      optional: true,
    },
    billCity: {
      type: "string",
      label: "Billing City Name",
      description: "*(optional)* City of billing address.",
      optional: true,
    },
    billState: {
      type: "string",
      label: "Billing State",
      description: "*(optional)* State of billing address. It supports state codes, e.g. `NY` (New York), for state or province of United States or Canada. Please refer to [state & province codes](https://www.fraudlabspro.com/developer/reference/state-and-province-codes) for complete list.",
      optional: true,
    },
    billCountry: {
      type: "string",
      label: "Billing Country Name",
      description: "*(optional)* Country of billing address. It requires the input of ISO-3166 alpha-2 country code, e.g. `US` for United States. Please refer to [Country Codes](https://www.fraudlabspro.com/developer/reference/country-codes) for complete list.",
      optional: true,
    },
    billZipCode: {
      type: "string",
      label: "Billing Zipcode",
      description: "*(optional)* Postal or ZIP code of billing address.",
      optional: true,
    },
    shipLastName: {
      type: "string",
      label: "Shipping Last Name",
      description: "*(optional)* Receiver's last name.",
      optional: true,
    },
    shipFirstName: {
      type: "string",
      label: "Shipping First Name",
      description: "*(optional)* Receiver's first name.",
      optional: true,
    },
    shipAddr: {
      type: "string",
      label: "Shipping Address",
      description: "*(optional)* Street address of shipping address.",
      optional: true,
    },
    shipCity: {
      type: "string",
      label: "Shipping City Name",
      description: "*(optional)* City of shipping address.",
      optional: true,
    },
    shipState: {
      type: "string",
      label: "Shipping State",
      description: "*(optional)* State of shipping address. It supports state codes, e.g. `NY` - New York, for state or province of United States or Canada. Please refer to [state & province codes](https://www.fraudlabspro.com/developer/reference/state-and-province-codes) for complete list.",
      optional: true,
    },
    shipCountry: {
      type: "string",
      label: "Shipping Country",
      description: "*(optional)* Country of shipping address. It requires the input of ISO-3166 alpha-2 country code, e.g. `US` for United States. Please refer to [Country Codes](https://www.fraudlabspro.com/developer/reference/country-codes) for complete list.",
      optional: true,
    },
    shipZipCode: {
      type: "string",
      label: "Shipping Zipcode",
      description: "*(optional)* Postal or ZIP code of shipping address.",
      optional: true,
    },
    emailDomain: {
      type: "string",
      label: "Email Domain",
      description: "*(optional)* Domain name of email address. For example, the domain of email address support@fraudlabspro.com is **fraudlabspro.com**. If you didn't supply this value, the system will automatically extract the domain name from the email field.",
      optional: true,
    },
    userPhone: {
      type: "string",
      label: "User Phone Number",
      description: "*(optional)* User's phone number.",
      optional: true,
    },
    email: {
      type: "string",
      label: "Email",
      description: "*(optional)* User's email address.",
      optional: true,
    },
    emailHash: {
      type: "string",
      label: "Email Hash",
      description: "*(optional)* SHA1-64k hash of user's email address. Please refer to [SHA1-64k Hash Function](https://www.fraudlabspro.com/developer/reference/sha1-64k-hash) for details.",
      optional: true,
    },
    usernameHash: {
      type: "string",
      label: "Username Hash",
      description: "*(optional)* SHA1-64k hash of user's username. Please refer to [SHA1-64k Hash Function](https://www.fraudlabspro.com/developer/reference/sha1-64k-hash) for details.",
      optional: true,
    },
    binNo: {
      type: "string",
      label: "Bin No.",
      description: "*(optional)* First 6-9 digits of credit card number to identify issuing bank.",
      optional: true,
    },
    cardHash: {
      type: "string",
      label: "Card Hash",
      description: "*(optional)* SHA1-64k hash of credit number. Please refer to [SHA1-64k Hash Function](https://www.fraudlabspro.com/developer/reference/sha1-64k-hash) for details.",
      optional: true,
    },
    avsResult: {
      type: "string",
      label: "AVS Result",
      description: "*(optional)* The single character AVS result returned by the credit card processor. Please refer to [AVS & CVV2 Response Codes](https://www.fraudlabspro.com/developer/reference/avs-and-cvv2-response-codes) for details.",
      optional: true,
    },
    cvvResult: {
      type: "string",
      label: "CVV Result",
      description: "*(optional)* The single character CVV2 result returned by the credit card processor. Please refer to [AVS & CVV2 Response Codes](https://www.fraudlabspro.com/developer/reference/avs-and-cvv2-response-codes) for details. NOTE: This is not for the input of the actual CVV code from the back of the credit card.",
      optional: true,
    },
    userOrderId: {
      type: "string",
      label: "User Order ID",
      description: "*(optional)* Merchant identifier to uniquely identify a transaction. It supports maximum of 15 characters user order id input.",
      optional: true,
    },
    userOrderMemo: {
      type: "string",
      label: "User Order Memo",
      description: "*(optional)* Merchant description of an order transaction. It supports maximum of 200 characters.",
      optional: true,
    },
    amount: {
      type: "string",
      label: "Amount",
      description: "*(optional)* Amount of the transaction.",
      optional: true,
    },
    quantity: {
      type: "string",
      label: "Quantity",
      description: "*(optional)* Total quantity of the transaction.",
      optional: true,
    },
    currency: {
      type: "string",
      label: "Currency",
      description: "*(optional)* Currency code used in the transaction. It requires the input of ISO-4217 (3 characters) currency code, e.g. `USD` for US Dollar. Please refer to [Currency Codes](https://www.fraudlabspro.com/developer/reference/currency-codes) for complete list.",
      optional: true,
    },
    department: {
      type: "string",
      label: "Department",
      description: "*(optional)* Merchant identifier to uniquely identify a product or service department.",
      optional: true,
    },
    paymentMode: {
      type: "string",
      label: "Payment Mode",
      description: "*(optional)* Payment mode of transaction. Valid values: `creditcard` | `affirm` | `paypal` | `googlecheckout` | `bitcoin` | `cod` | `moneyorder` | `wired` | `bankdeposit` | `elviauthorized` | `paymitco` | `cybersource` | `sezzle` | `viabill` | `amazonpay` | `pmnts_gateway` | `giftcard` | `ewayrapid` | `others`.",
      optional: true,
    },
    flpChecksum: {
      type: "string",
      label: "FLP Checksum",
      description: "*(optional)* Checksum for the device validation. Please visit [Agent Javascript](https://www.fraudlabspro.com/developer/javascript) to learn about the use of this parameter.",
      optional: true,
    },
  },
  async run({ $ }) {

    const {
      format,
      ip,
      lastName,
      firstName,
      billAddr,
      billCity,
      billState,
      billCountry,
      billZipCode,
      shipLastName,
      shipFirstName,
      shipAddr,
      shipCity,
      shipState,
      shipCountry,
      shipZipCode,
      emailDomain,
      userPhone,
      email,
      emailHash,
      usernameHash,
      binNo,
      cardHash,
      avsResult,
      cvvResult,
      userOrderId,
      userOrderMemo,
      amount,
      quantity,
      currency,
      department,
      paymentMode,
      flpChecksum,
    } = this;
    const response =
      await this.fraudlabsProApp.screenOrder({
        format: format ?? "json",
        ip,
        last_name: lastName ?? "",
        first_name: firstName ?? "",
        bill_addr: billAddr ?? "",
        bill_city: billCity ?? "",
        bill_state: billState ?? "",
        bill_country: billCountry ?? "",
        bill_zip_code: billZipCode ?? "",
        ship_last_name: shipLastName ?? "",
        ship_first_name: shipFirstName ?? "",
        ship_addr: shipAddr ?? "",
        ship_city: shipCity ?? "",
        ship_state: shipState ?? "",
        ship_country: shipCountry ?? "",
        ship_zip_code: shipZipCode ?? "",
        email_domain: emailDomain ?? "",
        user_phone: userPhone ?? "",
        email: email ?? "",
        email_hash: emailHash ?? "",
        username_hash: usernameHash ?? "",
        bin_no: binNo ?? "",
        card_hash: cardHash ?? "",
        avs_result: avsResult ?? "",
        cvv_result: cvvResult ?? "",
        user_order_id: userOrderId ?? "",
        user_order_memo: userOrderMemo ?? "",
        amount: amount ?? "",
        quantity: quantity ?? "",
        currency: currency ?? "",
        department: department ?? "",
        payment_mode: paymentMode ?? "",
        flp_checksum: flpChecksum ?? "",
      });
    $.export("$summary", "Successfully screen order");
    return response;

  },
};
